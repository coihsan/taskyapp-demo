model Board {
  id            String     @id @default(uuid())
  title         String?
  projectId     String
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  project       Projects    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  task          Task[]

  @@index([projectId])
}

model Task {
  id          String    @id @default(uuid())
  title       String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  content     String    @db.Text
  boardId     String
  board       Board     @relation(fields: [boardId], references: [id], onDelete: Cascade)
  is_complete Boolean   @default(false)
  sub_task    SubTask[]
  tags        Tags[]
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([boardId])
}

model SubTask {
  id          String     @id @default(uuid())
  title       String?
  content     String[]   @db.Text
  is_complete Boolean    @default(false)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  status      TaskStatus @default(INPROGRESS)
  taskId      String
  task        Task       @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model Tags {
  id         String   @id @default(uuid())
  name       String
  color      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  taskId     String
  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@index([taskId])
}

model Comment {
   id          String     @id @default(uuid())
   userId      String
   user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
   content     String

   @@index([userId])
}